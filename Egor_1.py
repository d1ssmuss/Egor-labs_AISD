"""
Лабораторная работа №1
Написать программу, которая читая символы из бесконечной последовательности (эмулируется конечным файлом, читающимся поблочно),
распознает, преобразует и выводит на экран лексемы по определенному правилу. Лексемы разделены пробелами.
Преобразование делать по возможности через словарь. Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа.
Регулярные выражения использовать нельзя.
Вариант 23.
Натуральные четные числа, начинающиеся с нечетной цифры и содержащие не более 3 нечетных цифр. Для каждого числа через тире вывести прописью первую цифру и нечетные цифры.

"""
def checkNum(str_num):
    # Проверка на наличие символа "-" и пустой строки
    if "-" in str_num or str_num == "":
        return False
    # Проверка на четность первой цифры и нечетность последней
    if int(str_num[0]) % 2 == 0 or int(str_num[-1]) % 2 != 0:
        return False

    # Подсчет нечетных цифр
    count = sum(1 for digit in str_num if int(digit) % 2 != 0)
    return count <= 3  # Не более 3 нечетных цифр


# Словарь для преобразования цифр в слова
perev_cifr = {
    '0': 'ноль', '1': 'один', '2': 'два', '3': 'три',
    '4': 'четыре', '5': 'пять', '6': 'шесть',
    '7': 'семь', '8': 'восемь', '9': 'девять'
}

# Список для хранения подходящих чисел
nums = []
file_name = "Егор 11-03-25/test2.txt"

# Проверка существования файла
try:
    with open(file_name, "r", encoding='utf-8') as file:
        for line in file:
            line = line.strip()  # Убираем пробелы и символы новой строки
            words = line.split()  # Разделяем строку на слова

            for word in words:
                if word.isdigit() and checkNum(word):
                    nums.append(word)

except FileNotFoundError:
    print("Файл отсутствует!")

# Проверка, нашли ли мы подходящие числа
if len(nums) == 0:
    print("Файл не нашёл чисел, удовлетворяющих условию!")
else:
    # Вывод результатов
    print("Для каждого числа через тире вывести прописью первую цифру и нечетные цифры")
    for num in nums:
        accept_char = [num[0]]  # Первая цифра
        accept_char.extend(char for char in num if int(char) % 2 != 0)  # Нечётные цифры
        # Преобразуем цифры в слова и выводим
        print(f"Число {num}:", " - ".join(perev_cifr[char] for char in accept_char))